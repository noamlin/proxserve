{"version":3,"sources":["global-vars.js","general-functions.js","supporting-functions.js","reserved-methods.js","index.js"],"names":["proxyTypes","proxyStatuses","eventNames","ND","Symbol","for","NID","realtypeof","variable","rawType","Object","prototype","toString","call","substring","length","simpleCloneSet","WeakSet","simpleClone","obj","typeofobj","cloned","add","keys","key","has","i","console","warn","splitPath","path","betweenBrackets","onlyDigits","resultsArr","tmp","char","push","parseInt","code","charCodeAt","evalPath","object","property","undefined","value","segments","Error","property2path","unproxify","typeofvalue","includes","target","$getOriginalTarget","error","createDataNode","parentNode","propertyPath","objects","node","create","status","assign","stop","dataNode","block","activate","force","dataTree","on","events","listener","id","once","Array","isArray","event","join","listeners","eventPool","removeListener","arguments","fullPath","splice","removeAllListeners","getOriginalTarget","getProxserveObjects","getProxserveDataNode","getProxserveInstance","start","deleteCount","items","proxy","oldValue","slice","deleted","reservedMethodsNames","reservedMethods","name","synonym","Proxserve","constructor","strict","emitReference","emitSplice","createProxy","targetProperty","typeoftarget","revocable","Proxy","get","bind","propertyIsEnumerable","getPrototypeOf","set","descriptor","getOwnPropertyDescriptor","enumerable","emitOldValue","shouldDestroy","isDeleted","emitValue","isValueProxy","isOldValueProxy","emitEvent","setTimeout","destroy","defineProperty","deleteProperty","revoke","typeofproperty","$getProxserveObjects","typeofproxy","module","exports"],"mappings":"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","file":"proxserve.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright 2021 Noam Lin <noamlin@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n */\n\"use strict\"\n\nexport let proxyTypes = ['Object', 'Array', 'Map']; //acceptable types to be proxied\nexport let proxyStatuses = ['active', 'stopped', 'blocked', 'splicing']; //statuses of proxies\nexport let eventNames = ['create', 'update', 'delete', 'splice'];\n\nexport let ND = Symbol.for('proxserve_node_data'); //key for the data of a node\nexport let NID = Symbol.for('proxserve_node_inherited_data'); //key for the inherited data of a node","/**\n * Copyright 2020 Noam Lin <noamlin@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n */\n\"use strict\"\n\n/**\n * return a string representing the full type of the variable\n * @param {*} variable \n * @returns {String} - Object, Array, Number, String, Boolean, Null, Undefined, BigInt, Symbol, Date ...\n */\nexport function realtypeof(variable) {\n\tlet rawType = Object.prototype.toString.call(variable); //[object Object], [object Array], [object Number] ...\n\treturn rawType.substring(8, rawType.length - 1);\n}\n\n/**\n * check if variable is a number or a string of a number\n * @param {*} variable \n */\n/*export function isNumeric(variable) {\n\tif(typeof variable === 'string' && variable === '') return false;\n\telse return !isNaN(variable);\n}*/\n\n/**\n * recursively clones objects and array\n * @param {Proxy|Object|Array} proxy \n */\nlet simpleCloneSet = new WeakSet();\nexport function simpleClone(obj) {\n\tlet typeofobj = realtypeof(obj);\n\tlet cloned;\n\tif(typeofobj === 'Object') {\n\t\tsimpleCloneSet.add(obj);\n\t\tcloned = {};\n\t\tlet keys = Object.keys(obj);\n\t\tfor(let key of keys) {\n\t\t\tif(simpleCloneSet.has(obj[key])) {\n\t\t\t\tcloned[key] = obj[key];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcloned[key] = simpleClone(obj[key]);\n\t\t\t}\n\t\t}\n\t}\n\telse if(typeofobj === 'Array') {\n\t\tsimpleCloneSet.add(obj);\n\t\tcloned = [];\n\t\tfor(let i = 0; i < obj.length; i++) {\n\t\t\tif(simpleCloneSet.has(obj[i])) {\n\t\t\t\tcloned[i] = obj[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcloned[i] = simpleClone(obj[i]);\n\t\t\t}\n\t\t}\n\t}\n\telse { //hopefully a primitive\n\t\tcloned = obj;\n\n\t\tif(typeofobj !== 'Undefined' && typeofobj !== 'Null' && typeofobj !== 'Boolean' && typeofobj !== 'Number'\n\t\t&& typeofobj !== 'BigInt' && typeofobj !== 'String') {\n\t\t\tconsole.warn(`Can't clone a variable of type ${typeofobj}`);\n\t\t}\n\t}\n\n\treturn cloned;\n}\n\n/**\n * splits a path to an array of properties\n * (benchmarked and is faster than regex and split())\n * @param {String} path \n */\nexport function splitPath(path) {\n\tif(typeof path !== 'string' || path === '') {\n\t\treturn [];\n\t}\n\t\n\tlet i = 0, betweenBrackets = false, onlyDigits = false;\n\t//loop will skip over openning '.' or '['\n\tif(path[0] === '.') {\n\t\ti = 1;\n\t} else if(path[0] === '[') {\n\t\ti = 1;\n\t\tbetweenBrackets = true;\n\t\tonlyDigits = true;\n\t}\n\n\tlet resultsArr = [];\n\tlet tmp='';\n\tfor(; i < path.length; i++) {\n\t\tlet char = path[i];\n\n\t\tif(betweenBrackets) {\n\t\t\tif(char === ']') {\n\t\t\t\tif(onlyDigits) resultsArr.push(parseInt(tmp, 10));\n\t\t\t\telse resultsArr.push(tmp);\n\n\t\t\t\tbetweenBrackets = false;\n\t\t\t\tonlyDigits = false;\n\t\t\t\ttmp = '';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(onlyDigits) {\n\t\t\t\t\tlet code = char.charCodeAt(0);\n\t\t\t\t\tif(code < 48 || code > 57) { //less than '0' char or greater than '9' char\n\t\t\t\t\t\tonlyDigits = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttmp += char;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif(char === '[') {\n\t\t\t\tbetweenBrackets = true;\n\t\t\t\tonlyDigits = true;\n\t\t\t}\n\t\t\t\n\t\t\t//check if starting a new property but avoid special case of [prop][prop]\n\t\t\tif(char === '.' || char === '[') {\n\t\t\t\tif(tmp !== '') {\n\t\t\t\t\tresultsArr.push(tmp);\n\t\t\t\t\ttmp = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp += char;\n\t\t\t}\n\t\t}\n\t}\n\tif(tmp!=='') {\n\t\tresultsArr.push(tmp);\n\t}\n\treturn resultsArr;\n}\n\n/**\n * evaluate a long path and return the designated object and its referred property\n * @param {Object} obj\n * @param {String} path\n * @returns {Object} - returns {object, property, value}\n */\nexport function evalPath(obj, path) {\n\tif(path === '') {\n\t\treturn { object: obj, property: undefined, value: obj };\n\t}\n\n\tlet segments = splitPath(path);\n\tlet i;\n\tfor(i = 0; i <= segments.length - 2; i++) { //iterate until one before last property because they all must exist\n\t\tobj = obj[segments[i]];\n\t\tif(typeof obj === 'undefined') {\n\t\t\tthrow new Error(`Invalid path was given - \"${path}\"`);\n\t\t}\n\t}\n\treturn { object: obj, property: segments[i], value: obj[ segments[i] ] };\n}","/**\n * Copyright 2021 Noam Lin <noamlin@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n */\n\"use strict\"\n\nimport { proxyTypes, ND, NID } from './global-vars.js';\nimport { realtypeof } from './general-functions.js';\n\n/**\n * Convert property name to valid path segment\n * @param {*} obj \n * @param {String} property \n */\nexport function property2path(obj, property) {\n\tif(typeof property === 'symbol') {\n\t\tthrow new Error(`property of type \"symbol\" isn't path'able`);\n\t}\n\n\tlet typeofobj = realtypeof(obj);\n\tswitch(typeofobj) {\n\t\tcase 'Object': return `.${property}`;\n\t\tcase 'Array': return `[${property}]`;\n\t\tdefault: console.warn(`Not Implemented (type of '${typeofobj}')`); return property;\n\t}\n}\n\n/**\n * recursively switch between all proxies to their original targets.\n * note: original targets should never hold proxies under them,\n * thus altering the object references (getting from 'value') should be ok.\n * if the programmer decided to\n * \t1. create a proxy with children (sub-proxies)\n * \t2. create a regular object\n * \t3. adding sub-proxies to the regular object\n * \t4. attaching the regular object to the proxy\n * then this regular object will be altered.\n * @param {*} value\n */\nexport function unproxify(value) {\n\tlet typeofvalue = realtypeof(value);\n\tif(proxyTypes.includes(typeofvalue)) {\n\t\tlet target = value;\n\t\ttry {\n\t\t\ttarget = value.$getOriginalTarget();\n\t\t} catch(error) {}\n\n\t\tswitch(typeofvalue) {\n\t\t\tcase 'Object':\n\t\t\t\tlet keys = Object.keys(target);\n\t\t\t\tfor(let key of keys) {\n\t\t\t\t\ttarget[key] = unproxify(target[key]); //maybe alters target and maybe returning the exact same object\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'Array':\n\t\t\t\tfor(let i=0; i < target.length; i++) {\n\t\t\t\t\ttarget[i] = unproxify(target[i]); //maybe alters target and maybe returning the exact same object\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn(`Not Implemented (type of '${typeofobj}')`);\n\t\t}\n\n\t\treturn target;\n\t}\n\telse {\n\t\treturn value; //primitive\n\t}\n}\n\n/**\n * create a node in a tree that mimics the proxserve's object and holds meta-data\n * @param {Object} parentNode \n * @param {String|Number} property \n */\nexport function createDataNode(parentNode, property) {\n\tlet propertyPath;\n\tif(parentNode[ND] && parentNode[ND].objects && parentNode[ND].objects.target) {\n\t\tpropertyPath = property2path(parentNode[ND].objects.target, property);\n\t} else {\n\t\tpropertyPath = property2path({}, property); //if parent doesn't have target then treat it as object\n\t}\n\t\n\tlet node = parentNode[property];\n\tif(!node) {\n\t\tnode = {\n\t\t\t[NID]: Object.create(parentNode[NID]),\n\t\t\t[ND]: {\n\t\t\t\t'parentNode': parentNode,\n\t\t\t\t'listeners': {\n\t\t\t\t\t'shallow': [],\n\t\t\t\t\t'deep': []\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tparentNode[property] = node;\n\t}\n\n\tdelete node[NID].status; //clears old status in case a node previously existed\n\t//updates path (for rare case where parent was array and then changed to object or vice versa)\n\t//and also makes a new and clean 'objects' property\n\tObject.assign(node[ND], {\n\t\t'path': parentNode[ND].path + propertyPath,\n\t\t'propertyPath': propertyPath,\n\t\t'objects': Object.assign(Object.create(parentNode[ND].objects), {\n\t\t\t'target': undefined,\n\t\t\t'proxy': undefined,\n\t\t\t'revoke': undefined\n\t\t})\n\t});\n\n\treturn node;\n}\n","/**\n * Copyright 2020 Noam Lin <noamlin@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n */\n\"use strict\"\n\nimport { eventNames, proxyStatuses, ND, NID } from './global-vars.js';\nimport { createDataNode } from './supporting-functions.js';\nimport { splitPath } from './general-functions.js';\n\n/**\n * stop object and children from emitting change events\n * @param {Object} dataNode\n */\nexport function stop(dataNode) {\n\tdataNode[NID].status = proxyStatuses[1];\n}\n\n/**\n * block object and children from any changes.\n * user can't set nor delete any property\n * @param {Object} dataNode\n */\nexport function block(dataNode) {\n\tdataNode[NID].status = proxyStatuses[2];\n}\n\n/**\n * resume default behavior of emitting change events, inherited from parent\n * @param {Object} dataNode\n * @param {Object} objects\n * @param {Boolean} [force] - force being active regardless of parent\n */\nexport function activate(dataNode, objects, force=false) {\n\tif(force || dataNode === this.dataTree) { //force activation or we are on root proxy\n\t\tdataNode[NID].status = proxyStatuses[0];\n\t}\n\telse {\n\t\tdelete dataNode[NID].status;\n\t}\n}\n\n/**\n * add event listener on a proxy or on a descending path\n * @param {Object} dataNode\n * @param {Object} objects\n * @param {String|Array.String} events\n * @param {String} [path] - path selector\n * @param {Function} listener \n * @param {String} [id] - identifier for removing this listener\n * @param {Boolean} [once] - whether this listener will run only once or always\n */\nexport function on(dataNode, objects, events, path, listener, id, once=false) {\n\tif(!Array.isArray(events)) events = [events];\n\n\tfor(let event of events) {\n\t\tif(!eventNames.includes(event)) {\n\t\t\tthrow new Error(`${event} is not a valid event. valid events are ${eventNames.join(',')}`);\n\t\t}\n\t}\n\t\n\tif(typeof path === 'function') { //if called without path\n\t\tid = listener;\n\t\tlistener = path;\n\t\tpath = '';\n\t} else if(typeof listener !== 'function') {\n\t\tthrow new Error(`invalid arguments were given. listener must be a function`);\n\t}\n\t\n\tlet segments = splitPath(path);\n\t//traverse down the tree. create data-nodes if needed\n\tfor(let property of segments) {\n\t\tif(!dataNode[property]) {\n\t\t\tcreateDataNode(dataNode, property);\n\t\t}\n\t\tdataNode = dataNode[property];\n\t}\n\n\tif(!dataNode[ND].listeners) {\n\t\tdataNode[ND].listeners = [];\n\t\tdataNode[ND].eventPool = [];\n\t}\n\tfor(let event of events) {\n\t\tdataNode[ND].listeners.push([event, listener, id, once]);\n\t}\n}\n\n/**\n * add event listener on a proxy or on a descending path which will run only once\n * @param {Object} dataNode\n * @param {Object} objects\n * @param {String|Array.String} events\n * @param {String} [path] - path selector\n * @param {Function} listener \n * @param {String} [id] - identifier for removing this listener\n */\nexport function once(dataNode, objects, events, path, listener, id) {\n\ton.call(this, dataNode, objects, events, path, listener, id, true);\n}\n\n/**\n * removes a listener from a path by an identifier (can have multiple listeners with the same ID)\n * or by the listener function itself\n * @param {Object} dataNode\n * @param {Object} objects\n * @param {String} [path] - path selector\n * @param {String} id - the listener(s) identifier or listener-function\n */\nexport function removeListener(dataNode, objects, path, id) {\n\tif(arguments.length === 3) { //if called without path\n\t\tid = path;\n\t\tpath = '';\n\t}\n\n\tlet fullPath = `${dataNode[ND].path}${path}`;\n\tlet segments = splitPath(path);\n\t//traverse down the tree\n\tfor(let property of segments) {\n\t\tif(!dataNode[property]) {\n\t\t\tconsole.warn(`can't remove listener from a non-existent path '${fullPath}'`);\n\t\t\treturn;\n\t\t}\n\t\tdataNode = dataNode[property];\n\t}\n\n\tif(dataNode[ND].listeners) {\n\t\tlet listeners = dataNode[ND].listeners;\n\t\n\t\tfor(let i = listeners.length - 1; i >= 0; i--) {\n\t\t\tif((typeof id !== 'function' && listeners[i][2] === id)\n\t\t\t|| (typeof id === 'function' && listeners[i][1] === id)) {\n\t\t\t\tlisteners.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tif(listeners.length === 0) {\n\t\t\tdelete dataNode[ND].listeners;\n\t\t\tdelete dataNode[ND].eventPool;\n\t\t}\n\t}\n}\n\n/**\n * removing all listeners of a path\n * @param {Object} dataNode\n * @param {Object} objects\n * @param {String} [path] - path selector\n */\nexport function removeAllListeners(dataNode, objects, path='') {\n\tlet fullPath = `${dataNode[ND].path}${path}`;\n\tlet segments = splitPath(path);\n\t//traverse down the tree\n\tfor(let property of segments) {\n\t\tif(!dataNode[property]) {\n\t\t\tconsole.warn(`can't remove all listeners from a non-existent path '${fullPath}'`);\n\t\t\treturn;\n\t\t}\n\t\tdataNode = dataNode[property];\n\t}\n\n\tif(dataNode[ND].listeners) {\n\t\tdelete dataNode[ND].listeners;\n\t\tdelete dataNode[ND].eventPool;\n\t}\n}\n\n/**\n * the following functions (getOriginalTarget, getProxserveObjects, getProxserveDataNode, getProxserveInstance) seem silly\n * because they could have been written directly on the handler's get() method but it's here as part of the convention of\n * exposing proxy-\"inherited\"-methods\n */\n/**\n * get original target that is behind the proxy\n * @param {Object} dataNode\n * @param {Object} objects\n */\nexport function getOriginalTarget(dataNode, objects) {\n\treturn objects.target;\n}\n\n/**\n * get 'objects' (which holds all related objects) of a proxy\n * @param {Object} dataNode\n * @param {Object} objects\n */\nexport function getProxserveObjects(dataNode, objects) {\n\treturn objects;\n}\n\n/**\n * get the data-node of the proxy or sub-proxy\n * @param {Object} dataNode\n */\nexport function getProxserveDataNode(dataNode) {\n\treturn dataNode;\n}\n\n/**\n * get the Proxserve's instance that created this proxy\n */\nexport function getProxserveInstance() {\n\treturn this;\n}\n\n/**\n * a wrapper function for the 'splice' method\n * @param {Array} target - the target array behind the proxy\n * @param {Object} dataNode \n * @param {Number} start \n * @param {Number} deleteCount \n * @param  {...any} items \n */\nexport function splice(dataNode, objects, start, deleteCount, ...items) {\n\tif(dataNode[NID].status !== proxyStatuses[0]) { //not 'active'\n\t\treturn Array.prototype.splice.call(objects.proxy, start, deleteCount, ...items);\n\t}\n\n\tdataNode[NID].status = proxyStatuses[3]; //'splicing'\n\tlet oldValue = objects.target.slice(0);\n\tlet deleted = Array.prototype.splice.call(objects.proxy, start, deleteCount, ...items);\n\tdataNode[NID].status = proxyStatuses[0];\n\n\treturn deleted;\n}\n","/**\n * Copyright 2020 Noam Lin <noamlin@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n */\n\"use strict\"\n\nimport { proxyTypes, proxyStatuses, add2emitQueue_bubble, unproxify, createDataNode } from './supporting-functions.js';\nimport * as reservedMethods from './reserved-methods.js';\nimport { realtypeof, simpleClone, splitPath, evalPath } from './general-functions.js';\n\nlet ND = Symbol.for('proxserve_node_data'); //key for the data of a node\nlet NID = Symbol.for('proxserve_node_inherited_data'); //key for the inherited data of a node\n\n/**\n * save an array of all reserved function names\n * and also add synonyms to these functions\n */\nlet reservedMethodsNames = Object.keys(reservedMethods);\nfor(let i = reservedMethodsNames.length - 1; i >= 0; i--) {\n\tlet name = reservedMethodsNames[i];\n\tlet synonym = '$'+name;\n\treservedMethods[synonym] = reservedMethods[name];\n\treservedMethodsNames.push(synonym);\n}\n\nclass Proxserve {\n\t/**\n\t * construct a new proxserve instance\n\t * @param {Object|Array} target \n\t * @param {Object} [options]\n\t * \t@property {Boolean} [options.strict] - should destroy detached child-objects or deleted properties automatically\n\t * \t@property {Boolean} [options.emitReference] - events emit new/old values. true: reference to original objects, false: deep clones that are created on the spot\n\t * \t@property {Boolean} [options.emitSplice] - should splice emit one 'splice' event or all CRUD events\n\t */\n\tconstructor(target, { strict=true, emitReference=false, emitSplice=true } = {}) {\n\t\tthis.strict = strict;\n\t\tthis.emitReference = emitReference;\n\t\tthis.emitSplice = emitSplice;\n\n\t\tthis.dataTree = createDataNode({\n\t\t\t[NID]: { 'status': proxyStatuses[0] },\n\t\t\t[ND]: { 'objects': { 'isDeleted': false } },\n\t\t\t'isTreePrototype': true\n\t\t}, '');\n\t\tthis.dataTree[ND].path = '';\n\t\tthis.dataTree[ND].propertyPath = '';\n\t\tthis.dataTree[ND].objects.target = target;\n\n\t\treturn this.createProxy(this.dataTree);\n\t}\n\n\t/**\n\t * create a new proxy and a new node for a property of the parent's target-object\n\t * @param {Object} parentNode\n\t * @param {String} [targetProperty]\n\t */\n\tcreateProxy(parentNode, targetProperty) {\n\t\tlet dataNode;\n\n\t\tif(targetProperty === undefined) { //refering to own node and not a child property (meaning root object)\n\t\t\tdataNode = parentNode;\n\t\t}\n\t\telse {\n\t\t\tdataNode = createDataNode(parentNode, targetProperty); //either creates new or returns an existing one with cleaned properties\n\t\t\tdataNode[ND].objects.target = parentNode[ND].objects.target[ targetProperty ]; //assign said 'target' to the dataNode\n\t\t}\n\n\t\tlet objects = dataNode[ND].objects; //a new one for every iteration\n\t\tlet target = objects.target;\n\n\t\tlet typeoftarget = realtypeof(target);\n\n\t\tif(proxyTypes.includes(typeoftarget)) {\n\t\t\tlet revocable = Proxy.revocable(target, {\n\t\t\t\tget: (target/*same as parent scope 'target'*/, property, proxy) => {\n\t\t\t\t\t//can access a function (or its synonym) if their keywords isn't used\n\t\t\t\t\tif(reservedMethodsNames.includes(property)\n\t\t\t\t\t&& (typeof target[property] === 'undefined' || (property === 'splice' && Array.isArray(target)))) {\n\t\t\t\t\t\treturn reservedMethods[property].bind(this, dataNode, objects);\n\t\t\t\t\t}\n\t\t\t\t\telse if(!target.propertyIsEnumerable(property) || typeof property === 'symbol') {\n\t\t\t\t\t\treturn target[property]; //non-enumerable or non-path'able aren't proxied\n\t\t\t\t\t}\n\t\t\t\t\telse if(dataNode[property] //there's a child node\n\t\t\t\t\t\t\t&& dataNode[property][ND].objects.proxy //it holds a proxy\n\t\t\t\t\t\t\t&& Object.getPrototypeOf(dataNode[property][ND].objects) === objects) { //is child of this proxy, and not a ghost object left there after deletion\n\t\t\t\t\t\treturn dataNode[property][ND].objects.proxy;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn target[property];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\n\t\t\t\tset: (target/*same as parent scope 'target'*/, property, value, proxy) => { //'receiver' is proxy\n\t\t\t\t\t/**\n\t\t\t\t\t * property can be a regular object because of 3 possible reasons:\n\t\t\t\t\t * 1. proxy is deleted from tree but user keeps accessing it then it means he saved a reference\n\t\t\t\t\t * 2. it is a non-enumerable property which means it was intentionally hidden\n\t\t\t\t\t * 3. property is a symbol and symbols can't be proxied because we can't create a normal path for them.\n\t\t\t\t\t *    these properties are not proxied and should not emit change-event.\n\t\t\t\t\t *    except for: length\n\t\t\t\t\t * TODO - make a list of all possible properties exceptions (maybe function 'name'?)\n\t\t\t\t\t */\n\t\t\t\t\tif(dataNode[NID].status === proxyStatuses[2]) { //blocked from changing values\n\t\t\t\t\t\tconsole.error(`can't change value of property '${property}'. object is blocked.`);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse if(typeof property === 'symbol') {\n\t\t\t\t\t\ttarget[property] = value;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse if(property !== 'length' && !target.propertyIsEnumerable(property)) {\n\t\t\t\t\t\t//if setting a whole new property then it is non-enumerable (yet) so a further test is needed\n\t\t\t\t\t\tlet descriptor = Object.getOwnPropertyDescriptor(target, property);\n\t\t\t\t\t\tif(typeof descriptor === 'object' && descriptor.enumerable === false) { //property was previously set\n\t\t\t\t\t\t\ttarget[property] = value;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet oldValue;\n\t\t\t\t\tlet emitOldValue = target[property]; //should not be proxy\n\t\t\t\t\tlet shouldDestroy = false;\n\t\t\t\t\tif(dataNode[property] !== undefined && dataNode[property][ND].objects.proxy !== undefined) {\n\t\t\t\t\t\t//about to overwrite an existing property which is a proxy (about to detach a proxy)\n\t\t\t\t\t\toldValue = dataNode[property][ND].objects.proxy; //the sub-proxy\n\t\t\t\t\t\tdataNode[property][ND].objects.isDeleted = true;\n\t\t\t\t\t\tif(this.strict) {\n\t\t\t\t\t\t\tshouldDestroy = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = unproxify(value);\n\t\t\t\t\ttarget[property] = value; //assign new value\n\n\t\t\t\t\tlet emitValue = value; //currently not a proxy but this might change later\n\t\t\t\t\tlet isValueProxy = false;\n\t\t\t\t\tlet typeofvalue = realtypeof(value);\n\t\t\t\t\tif(proxyTypes.includes(typeofvalue)) {\n\t\t\t\t\t\tthis.createProxy(dataNode, property); //if trying to add a new value which is an object then make it a proxy\n\t\t\t\t\t\temitValue = dataNode[property][ND].objects.proxy; //is a proxy\n\t\t\t\t\t\tisValueProxy = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!this.emitReference) { //deep copy with no proxies inside\n\t\t\t\t\t\temitValue = simpleClone(emitValue);\n\t\t\t\t\t\temitOldValue = simpleClone(emitOldValue);\n\t\t\t\t\t}\n\n\t\t\t\t\t//add2emitQueue_bubble(dataNode, property, emitOldValue, oldValue!==undefined, emitValue, isValueProxy);\n\t\t\t\t\tlet isOldValueProxy = oldValue !== undefined;\n\t\t\t\t\temitEvent(dataNode, property, emitOldValue, isOldValueProxy, emitValue, isValueProxy);\n\t\t\t\t\tif(shouldDestroy) {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tProxserve.destroy(oldValue);\n\t\t\t\t\t\t}, 1000); //postpone this cpu intense function for later, probably when proxserve is not in use\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * TODO - this function is incomplete and doesn't handle all of 'descriptor' scenarios\n\t\t\t\t */\n\t\t\t\tdefineProperty: (target/*same as parent scope 'target'*/, property, descriptor) => {\n\t\t\t\t\tif(typeof property === 'symbol') {\n\t\t\t\t\t\tObject.defineProperty(target, property, descriptor);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet oldValue;\n\t\t\t\t\tlet emitOldValue = target[property]; //should not be proxy\n\t\t\t\t\tlet shouldDestroy = false;\n\t\t\t\t\tif(dataNode[property] !== undefined && dataNode[property][ND].objects.proxy !== undefined) {\n\t\t\t\t\t\t//about to overwrite an existing property which is a proxy (about to detach a proxy)\n\t\t\t\t\t\toldValue = dataNode[property][ND].objects.proxy; //the sub-proxy\n\t\t\t\t\t\tdataNode[property][ND].objects.isDeleted = true;\n\t\t\t\t\t\tif(this.strict) {\n\t\t\t\t\t\t\tshouldDestroy = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdescriptor.value = unproxify(descriptor.value);\n\t\t\t\t\tObject.defineProperty(target, property, descriptor); //defining the new value\n\t\t\t\t\tlet value = descriptor.value;\n\t\t\t\t\tlet emitValue = value; //currently not a proxy but this might change later\n\n\t\t\t\t\tlet isValueProxy = false;\n\t\t\t\t\t//excluding non-enumerable properties from being proxied\n\t\t\t\t\tlet typeofvalue = realtypeof(descriptor.value);\n\t\t\t\t\tif(proxyTypes.includes(typeofvalue) && descriptor.enumerable === true) {\n\t\t\t\t\t\tthis.createProxy(dataNode, property); //if trying to add a new value which is an object then make it a proxy\n\n\t\t\t\t\t\tvalue = dataNode[property][ND].objects.proxy; //value is now the proxy, not the target\n\t\t\t\t\t\tisValueProxy = true;\n\t\t\t\t\t\temitValue = value; //is a proxy\n\t\t\t\t\t\tif(!this.emitReference) {\n\t\t\t\t\t\t\temitValue = simpleClone(emitValue);\n\t\t\t\t\t\t\temitOldValue = simpleClone(emitOldValue); //deep copy with no proxies inside\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tadd2emitQueue_bubble(dataNode, property, emitOldValue, oldValue!==undefined, emitValue, isValueProxy);\n\t\t\t\t\tif(shouldDestroy) {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tProxserve.destroy(oldValue);\n\t\t\t\t\t\t}, 1000); //postpone this cpu intense function for later, probably when proxserve is not is use\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\n\t\t\t\tdeleteProperty: (target/*same as parent scope 'target'*/, property) => {\n\t\t\t\t\tif(!target.propertyIsEnumerable(property) || typeof property === 'symbol') {\n\t\t\t\t\t\t//non-proxied properties simply get deleted and nothing more\n\t\t\t\t\t\tdelete target[property];\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(dataNode[NID].status === proxyStatuses[2]) { //blocked from changing values\n\t\t\t\t\t\tconsole.error(`can't delete property '${property}'. object is blocked.`);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(property in target) {\n\t\t\t\t\t\tlet oldValue;\n\t\t\t\t\t\tlet emitOldValue = target[property]; //should not be proxy\n\t\t\t\t\t\tif(!this.emitReference) {\n\t\t\t\t\t\t\temitOldValue = simpleClone(emitOldValue); //deep copy with no proxies inside\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet shouldDestroy = false;\n\t\t\t\t\t\tif(dataNode[property] !== undefined && dataNode[property][ND].objects.proxy !== undefined) {\n\t\t\t\t\t\t\t//about to overwrite an existing property which is a proxy (about to detach a proxy)\n\t\t\t\t\t\t\toldValue = dataNode[property][ND].objects.proxy; //the sub-proxy\n\t\t\t\t\t\t\tdataNode[property][ND].objects.isDeleted = true;\n\t\t\t\t\t\t\tif(this.strict) {\n\t\t\t\t\t\t\t\tshouldDestroy = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdelete target[property]; //actual delete\n\n\t\t\t\t\t\tadd2emitQueue_bubble(dataNode, property, emitOldValue, oldValue!==undefined, undefined, false);\n\t\t\t\t\t\tif(shouldDestroy) {\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tProxserve.destroy(oldValue);\n\t\t\t\t\t\t\t}, 1000); //postpone this cpu intense function for later, probably when proxserve is not is use\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn true; //do nothing because there's nothing to delete\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdataNode[ND].objects.proxy = revocable.proxy;\n\t\t\tdataNode[ND].objects.revoke = revocable.revoke;\n\n\t\t\tif(typeoftarget === 'Object') {\n\t\t\t\tlet keys = Object.keys(target);\n\t\t\t\tfor(let key of keys) {\n\t\t\t\t\tlet typeofproperty = realtypeof(target[key]);\n\t\t\t\t\tif(proxyTypes.includes(typeofproperty)) {\n\t\t\t\t\t\tthis.createProxy(dataNode, key); //recursively make child objects also proxies\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(typeoftarget === 'Array') {\n\t\t\t\tfor(let i = 0; i < target.length; i++) {\n\t\t\t\t\tlet typeofproperty = realtypeof(target[i]);\n\t\t\t\t\tif(proxyTypes.includes(typeofproperty)) {\n\t\t\t\t\t\tthis.createProxy(dataNode, i); //recursively make child objects also proxies\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.warn('Not Implemented');\n\t\t\t}\n\n\t\t\treturn revocable.proxy;\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('Must observe an '+proxyTypes.join('/'));\n\t\t}\n\t}\n\n\t/**\n\t * Recursively revoke proxies, allowing them to be garbage collected.\n\t * this functions delays 1000 milliseconds to let time for all events to finish\n\t * @param {*} proxy \n\t */\n\tstatic destroy(proxy) {\n\t\tlet objects;\n\t\ttry {\n\t\t\tobjects = proxy.$getProxserveObjects();\n\t\t} catch(error) {\n\t\t\treturn; //proxy variable isn't a proxy\n\t\t}\n\n\t\tif(!objects.isDeleted) {\n\t\t\tobjects.isDeleted = true;\n\t\t}\n\n\t\tlet typeofproxy = realtypeof(proxy);\n\n\t\tif(proxyTypes.includes(typeofproxy)) {\n\t\t\tif(typeofproxy === 'Object') {\n\t\t\t\tlet keys = Object.keys(proxy);\n\t\t\t\tfor(let key of keys) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet typeofproperty = realtypeof(proxy[key]);\n\t\t\t\t\t\tif(proxyTypes.includes(typeofproperty)) {\n\t\t\t\t\t\t\tProxserve.destroy(proxy[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(error) {\n\t\t\t\t\t\tconsole.error(error); //don't throw and kill the whole process just if this iteration fails\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(typeofproxy === 'Array') {\n\t\t\t\tfor(let i = proxy.length - 1; i >= 0; i--) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet typeofproperty = realtypeof(proxy[i]);\n\t\t\t\t\t\tif(proxyTypes.includes(typeofproperty)) {\n\t\t\t\t\t\t\tProxserve.destroy(proxy[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(error) {\n\t\t\t\t\t\tconsole.error(error); //don't throw and kill the whole process just if this iteration fails\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.warn('Not Implemented');\n\t\t\t}\n\n\t\t\tobjects.revoke();\n\t\t\tobjects.proxy = undefined;\n\t\t}\n\t}\n\n\tstatic splitPath(path) {\n\t\treturn splitPath(path);\n\t}\n\n\tstatic evalPath(obj, path) {\n\t\treturn evalPath(obj, path);\n\t}\n}\n\nmodule.exports = exports = Proxserve; //makes ParcelJS expose this globally (for all platforms) after bundling everything"]}