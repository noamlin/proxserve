var Proxserve=function(exports){"use strict";const ND=Symbol.for("proxserve_node_data"),NID=Symbol.for("proxserve_node_inherited_data"),proxyTypes={Object:!0,Array:!0};var NODE_STATUSES,PROXY_STATUSES,EVENTS;function realtypeof(variable){let rawType=Object.prototype.toString.call(variable);return rawType.substring(8,rawType.length-1)}function splitPath(path){if("string"!=typeof path||""===path)return[];let i=0,betweenBrackets=!1,onlyDigits=!1;"."===path[0]?i=1:"["===path[0]&&(i=1,betweenBrackets=!0,onlyDigits=!0);let resultsArr=[],tmp="";for(;i<path.length;i++){let char=path[i];if(betweenBrackets)if("]"===char)onlyDigits?resultsArr.push(parseInt(tmp,10)):resultsArr.push(tmp),betweenBrackets=!1,onlyDigits=!1,tmp="";else{if(onlyDigits){let code=char.charCodeAt(0);(code<48||code>57)&&(onlyDigits=!1)}tmp+=char}else"["===char&&(betweenBrackets=!0,onlyDigits=!0),"."===char||"["===char?""!==tmp&&(resultsArr.push(tmp),tmp=""):tmp+=char}return""!==tmp&&resultsArr.push(tmp),resultsArr}!function(NODE_STATUSES){NODE_STATUSES.active="active",NODE_STATUSES.stopped="stopped",NODE_STATUSES.blocked="blocked",NODE_STATUSES.splicing="splicing"}(NODE_STATUSES||(NODE_STATUSES={})),function(PROXY_STATUSES){PROXY_STATUSES.alive="alive",PROXY_STATUSES.deleted="deleted",PROXY_STATUSES.revoked="revoked"}(PROXY_STATUSES||(PROXY_STATUSES={})),function(EVENTS){EVENTS.create="create",EVENTS.update="update",EVENTS.delete="delete",EVENTS.splice="splice",EVENTS.shift="shift",EVENTS.unshift="unshift"}(EVENTS||(EVENTS={}));const on=function(args){const{path:path="",listener:listener,id:id,deep:deep=!1,once:once=!1}=args;let{event:events}=args;"change"===events?events=Object.keys(EVENTS):Array.isArray(events)||(events=[events]);for(let event of events)if(!EVENTS[event]){const names=Object.keys(EVENTS);throw new Error(`${event} is not a valid event. valid events are ${names.join(",")}`)}let dataNode=this.dataNode,segments=splitPath(path);for(let property of segments)dataNode[property]||createNodes(dataNode,property),dataNode=dataNode[property];let listenersPool=dataNode[ND].listeners.shallow;deep&&(listenersPool=dataNode[ND].listeners.deep);let listenerObj={type:events,once:once,func:listener};void 0!==id&&(listenerObj.id=id),listenersPool.push(listenerObj)};function removeById(listenersArr,id){for(let i=listenersArr.length-1;i>=0;i--){let listenerObj=listenersArr[i];(void 0!==id&&listenerObj.id===id||listenerObj.func===id)&&listenersArr.splice(i,1)}}const whoami=function(){return this.dataNode[NID].name+this.dataNode[ND].path};var pseudoMethods=Object.freeze({__proto__:null,activate:function(force=!1){force||this.dataNode===this.metadata.dataTree?this.dataNode[NID].status=NODE_STATUSES.active:delete this.dataNode[NID].status},block:function(){this.dataNode[NID].status=NODE_STATUSES.blocked},getOriginalTarget:function(){return this.proxyNode[ND].target},getProxserveName:function(){return this.dataNode[NID].name},getProxserveNodes:function(){return{dataNode:this.dataNode,proxyNode:this.proxyNode}},on:on,once:function(args){args.once=!0,on.call(this,args)},removeAllListeners:function(path=""){const fullPath=`${this.dataNode[ND].path}${path}`,segments=splitPath(path);let dataNode=this.dataNode;for(let property of segments){if(!dataNode[property])return void console.warn(`can't remove all listeners from a non-existent path '${fullPath}'`);dataNode=dataNode[property]}dataNode[ND].listeners.shallow=[],dataNode[ND].listeners.deep=[]},removeListener:function(args){const{id:id,path:path=""}=args,fullPath=`${this.dataNode[ND].path}${path}`;let dataNode=this.dataNode;const segments=splitPath(path);for(let property of segments){if(!dataNode[property])return void console.warn(`can't remove listener from a non-existent path '${fullPath}'`);dataNode=dataNode[property]}removeById(dataNode[ND].listeners.shallow,id),removeById(dataNode[ND].listeners.deep,id)},stop:function(){this.dataNode[NID].status=NODE_STATUSES.stopped},whoami:whoami});function property2path(obj,property){if("symbol"==typeof property)throw new Error("property of type \"symbol\" isn't path'able");const typeofobj=realtypeof(obj);switch(typeofobj){case"Object":return`.${property}`;case"Array":return`[${property}]`;default:return console.warn(`Not Implemented (type of '${typeofobj}')`),property}}function unproxify(value){const typeofvalue=realtypeof(value);if(proxyTypes[typeofvalue]){let target=value;try{target=value.$getOriginalTarget()}catch(error){}switch(typeofvalue){case"Object":let keys=Object.keys(target);for(let key of keys)target[key]=unproxify(target[key]);break;case"Array":for(let i=0;i<target.length;i++)target[i]=unproxify(target[i]);break;default:console.warn(`Not Implemented (type of '${typeofvalue}')`)}return target}return value}function createNodes(parentDataNode,property,parentProxyNode,target){let propertyPath;propertyPath=(null==parentProxyNode?void 0:parentProxyNode[ND].target)?property2path(parentProxyNode[ND].target,property):property2path({},property);let proxyNode,dataNode=parentDataNode[property];return dataNode||(dataNode={[NID]:Object.create(parentDataNode[NID]),[ND]:{parentNode:parentDataNode,listeners:{shallow:[],deep:[]}}},parentDataNode[property]=dataNode),delete dataNode[NID].status,parentDataNode[ND].isTreePrototype?Object.assign(dataNode[ND],{path:"",propertyPath:""}):Object.assign(dataNode[ND],{path:parentDataNode[ND].path+propertyPath,propertyPath:propertyPath}),parentProxyNode?(proxyNode={[NID]:Object.create(parentProxyNode[NID]),[ND]:{target:target,dataNode:dataNode}},parentProxyNode[property]=proxyNode,dataNode[ND].proxyNode=proxyNode):proxyNode=void 0,{dataNode:dataNode,proxyNode:proxyNode}}let noStackFlag=!1;function stackTraceLog(dataNode,change,logLevel){if("normal"!==logLevel&&"verbose"!==logLevel)return;const stack=(new Error).stack;if(!stack)return void(noStackFlag||(console.error("Can't log stack trace of proxserve. browser/runtime doesn't support Error.stack"),noStackFlag=!0));const functionsTrace=stack.split("\n").map((value=>value.trim()));0===functionsTrace[0].toLowerCase().indexOf("error")&&functionsTrace.shift(),functionsTrace.shift(),functionsTrace[0]="Stack Trace:";const pathname=whoami.call({dataNode:dataNode})+change.path;let verb=change.type;change.type===EVENTS.shift||change.type===EVENTS.unshift?verb+="ed":verb+="d",console.log("%c                                                                ","border-bottom: 1px solid #008;"),console.log(`%c${pathname} %chas been ${verb}:`,"font-weight: bold; color: #008;","color: #000;"),"verbose"===logLevel&&("splice"!==change.type&&"unshift"!==change.type||(console.log(`%cArguments of ${change.type}:`,"color: #555; font-style: italic;"),console.log(change.args)),console.log("%cOld value was:","color: #555; font-style: italic;"),console.log(change.oldValue),console.log("%cNew value is:","color: #555; font-style: italic;"),console.log(change.value)),console.log(`%c${functionsTrace.join("\n")}`,"color: #999;"),console.log("%c                                                                ","border-top: 1px solid #008;")}function getProxyValue(dataNode,property){var _a;if(dataNode[ND].proxyNode&&dataNode[ND].proxyNode[NID].status===PROXY_STATUSES.alive)return dataNode[ND].proxyNode[ND].proxy;{property||(property=splitPath(dataNode[ND].propertyPath)[0]);let parentNode=dataNode[ND].parentNode;if(parentNode[ND].proxyNode&&parentNode[ND].proxyNode[NID].status===PROXY_STATUSES.alive)return null===(_a=parentNode[ND].proxyNode[ND].proxy)||void 0===_a?void 0:_a[property]}}function initEmitEvent(dataNode,property,oldValue,wasOldValueProxy,value,isValueProxy,trace){if(oldValue===value||!dataNode[ND].proxyNode)return;let proxyNode=dataNode[ND].proxyNode;if(proxyNode[NID].status!==PROXY_STATUSES.alive)return;let deferredEvents,path,changeType=EVENTS.update;void 0===value?changeType=EVENTS.delete:void 0===oldValue&&(changeType=EVENTS.create),dataNode[NID].status===NODE_STATUSES.splicing&&(dataNode[ND].deferredEvents||(dataNode[ND].deferredEvents=[]),deferredEvents=dataNode[ND].deferredEvents),dataNode[property]?(dataNode=dataNode[property],path=""):path=property2path(proxyNode[ND].target,property);let change={path:path,value:value,oldValue:oldValue,type:changeType};deferredEvents?deferredEvents.push({dataNode:dataNode,change:change,shouldCapture:wasOldValueProxy||isValueProxy}):(stackTraceLog(dataNode,change,trace),bubbleEmit(dataNode,change,property),(wasOldValueProxy||isValueProxy)&&captureEmit(dataNode,change))}function bubbleEmit(dataNode,change,property){if(dataNode[NID].status===NODE_STATUSES.stopped)return;let thisValue=getProxyValue(dataNode,property);if(""===change.path&&iterateAndEmit(dataNode[ND].listeners.shallow,thisValue,change),iterateAndEmit(dataNode[ND].listeners.deep,thisValue,change),!dataNode[ND].parentNode[ND].isTreePrototype){let nextChange={...change,path:dataNode[ND].propertyPath+change.path};bubbleEmit(dataNode[ND].parentNode,nextChange)}}function captureEmit(dataNode,change){let keys=Object.keys(dataNode);for(let key of keys){let subValue="object"==typeof change.value&&null!==change.value?change.value[key]:void 0,subOldValue="object"==typeof change.oldValue&&null!==change.oldValue?change.oldValue[key]:void 0;if(subValue!==subOldValue){let changeType=EVENTS.update;void 0===subValue?changeType=EVENTS.delete:void 0===subOldValue&&(changeType=EVENTS.create);let subChange={path:"",oldValue:subOldValue,value:subValue,type:changeType},childNode=dataNode[key];if(childNode[NID].status!==NODE_STATUSES.stopped){let thisValue=getProxyValue(childNode,key);iterateAndEmit(childNode[ND].listeners.shallow,thisValue,subChange)}captureEmit(childNode,subChange)}}}function iterateAndEmit(listenersArr,thisValue,change){for(let i=listenersArr.length-1;i>=0;i--){let listener=listenersArr[i];listener.type.includes(change.type)&&(!0===listener.once&&listenersArr.splice(i,1),listener.func.call(thisValue,change))}}function initFunctionEmitEvent(dataNode,funcName,funcArgs,oldValue,value,trace){let change={path:"",value:value,oldValue:oldValue,type:funcName,args:funcArgs};if(stackTraceLog(dataNode,change,trace),bubbleEmit(dataNode,change),dataNode[ND].deferredEvents){for(let event of dataNode[ND].deferredEvents){if(""===event.change.path){let thisValue=getProxyValue(event.dataNode);iterateAndEmit(event.dataNode[ND].listeners.shallow,thisValue,event.change),iterateAndEmit(event.dataNode[ND].listeners.deep,thisValue,event.change)}event.shouldCapture&&captureEmit(event.dataNode,event.change)}delete dataNode[ND].deferredEvents}else console.warn(`no side effect events for ${funcName} were made`)}var proxyMethods=Object.freeze({__proto__:null,shift:function(){if(this.dataNode[NID].status!==NODE_STATUSES.active)return Array.prototype.shift.call(this.proxyNode[ND].proxy);let isActiveByInheritance=!this.dataNode[NID].hasOwnProperty("status");this.dataNode[NID].status=NODE_STATUSES.splicing;let oldValue=this.proxyNode[ND].target.slice(0),deleted=Array.prototype.shift.call(this.proxyNode[ND].proxy);return isActiveByInheritance?delete this.dataNode[NID].status:this.dataNode[NID].status=NODE_STATUSES.active,initFunctionEmitEvent(this.dataNode,EVENTS.shift,{},oldValue,this.proxyNode[ND].target,this.metadata.trace),deleted},splice:function(start,deleteCount,...items){if(this.dataNode[NID].status!==NODE_STATUSES.active)return Array.prototype.splice.call(this.proxyNode[ND].proxy,start,deleteCount,...items);let isActiveByInheritance=!this.dataNode[NID].hasOwnProperty("status");this.dataNode[NID].status=NODE_STATUSES.splicing;let oldValue=this.proxyNode[ND].target.slice(0),deleted=Array.prototype.splice.call(this.proxyNode[ND].proxy,start,deleteCount,...items),args={start:start,deleteCount:deleteCount,items:items};return isActiveByInheritance?delete this.dataNode[NID].status:this.dataNode[NID].status=NODE_STATUSES.active,initFunctionEmitEvent(this.dataNode,EVENTS.splice,args,oldValue,this.proxyNode[ND].target,this.metadata.trace),deleted},unshift:function(...items){if(this.dataNode[NID].status!==NODE_STATUSES.active)return Array.prototype.unshift.call(this.proxyNode[ND].proxy,...items);let isActiveByInheritance=!this.dataNode[NID].hasOwnProperty("status");this.dataNode[NID].status=NODE_STATUSES.splicing;let oldValue=this.proxyNode[ND].target.slice(0),newLength=Array.prototype.unshift.call(this.proxyNode[ND].proxy,...items),args={items:items};return isActiveByInheritance?delete this.dataNode[NID].status:this.dataNode[NID].status=NODE_STATUSES.active,initFunctionEmitEvent(this.dataNode,EVENTS.unshift,args,oldValue,this.proxyNode[ND].target,this.metadata.trace),newLength}});let pseudoMethodsNames=Object.keys(pseudoMethods),pseudoMethodsExtended={};for(let i=pseudoMethodsNames.length-1;i>=0;i--){let name=pseudoMethodsNames[i],synonym="$"+name;pseudoMethodsNames.push(synonym),pseudoMethodsExtended[name]=pseudoMethods[name],pseudoMethodsExtended[synonym]=pseudoMethods[name]}class Proxserve{static make(target,options={}){var _a,_b;const{strict:strict=!0,methodsEmitRaw:methodsEmitRaw=!1,name:name="",debug:debug}=options,destroyDelay=null!==(_a=null==debug?void 0:debug.destroyDelay)&&void 0!==_a?_a:1e3,trace=null!==(_b=null==debug?void 0:debug.trace)&&void 0!==_b?_b:"none";const newNodes=createNodes({[NID]:{status:NODE_STATUSES.active,name:name},[ND]:{isTreePrototype:!0}},"",{[NID]:{status:PROXY_STATUSES.alive},[ND]:{isTreePrototype:!0}},target),metadata={strict:strict,methodsEmitRaw:methodsEmitRaw,destroyDelay:destroyDelay,trace:trace,dataTree:newNodes.dataNode,proxyTree:newNodes.proxyNode};return Proxserve.createProxy(metadata,metadata.dataTree)}static createProxy(metadata,parentDataNode,targetProperty){const parentProxyNode=parentDataNode[ND].proxyNode;let dataNode,proxyNode;if(void 0===targetProperty)dataNode=parentDataNode,proxyNode=parentProxyNode;else{const newNodes=createNodes(parentDataNode,targetProperty,parentProxyNode,parentProxyNode[ND].target[targetProperty]);dataNode=newNodes.dataNode,proxyNode=newNodes.proxyNode}const target=proxyNode[ND].target,typeoftarget=realtypeof(target);if(proxyTypes[typeoftarget]){const revocable=Proxy.revocable(target,{get:(target,property,proxy)=>!1===metadata.methodsEmitRaw&&Object.prototype.hasOwnProperty.call(proxyMethods,property)&&property in Object.getPrototypeOf(target)?proxyMethods[property].bind({metadata:metadata,dataNode:dataNode,proxyNode:proxyNode}):pseudoMethodsNames.includes(property)&&void 0===target[property]?pseudoMethodsExtended[property].bind({metadata:metadata,dataNode:dataNode,proxyNode:proxyNode}):target.propertyIsEnumerable(property)&&"symbol"!=typeof property&&proxyNode[property]&&proxyNode[property][ND].proxy&&proxyNode[property][NID].status===PROXY_STATUSES.alive?proxyNode[property][ND].proxy:target[property],set:(target,property,value,proxy)=>{if(dataNode[NID].status===NODE_STATUSES.blocked)return console.error("object is blocked. can't change value of property:",property),!0;if("symbol"==typeof property||property.startsWith("_$"))return target[property]=value,!0;if("length"!==property&&!target.propertyIsEnumerable(property)){let descriptor=Object.getOwnPropertyDescriptor(target,property);if("object"==typeof descriptor&&!1===descriptor.enumerable)return target[property]=value,!0}let oldValue=target[property],isOldValueProxy=!1;void 0!==proxyNode[property]&&void 0!==proxyNode[property][ND].proxy&&(proxyNode[property][NID].status=PROXY_STATUSES.deleted,delete dataNode[property][ND].proxyNode,isOldValueProxy=!0,metadata.strict&&setTimeout(Proxserve.destroy,metadata.destroyDelay,proxyNode[property][ND].proxy)),value=unproxify(value),target[property]=value;let isValueProxy=!1,typeofvalue=realtypeof(value);return proxyTypes[typeofvalue]&&(Proxserve.createProxy(metadata,dataNode,property),isValueProxy=!0),initEmitEvent(dataNode,property,oldValue,isOldValueProxy,value,isValueProxy,metadata.trace),!0},defineProperty:(target,property,descriptor)=>{if("symbol"==typeof property)return Object.defineProperty(target,property,descriptor),!0;let oldValue=target[property],isOldValueProxy=!1;void 0!==proxyNode[property]&&void 0!==proxyNode[property][ND].proxy&&(proxyNode[property][NID].status=PROXY_STATUSES.deleted,delete dataNode[property][ND].proxyNode,isOldValueProxy=!0,metadata.strict&&setTimeout(Proxserve.destroy,metadata.destroyDelay,proxyNode[property][ND].proxy)),descriptor.value=unproxify(descriptor.value),Object.defineProperty(target,property,descriptor);let value=descriptor.value,isValueProxy=!1,typeofvalue=realtypeof(descriptor.value);return proxyTypes[typeofvalue]&&!0===descriptor.enumerable&&(Proxserve.createProxy(metadata,dataNode,property),isValueProxy=!0),initEmitEvent(dataNode,property,oldValue,isOldValueProxy,value,isValueProxy,metadata.trace),!0},deleteProperty:(target,property)=>{if(!target.propertyIsEnumerable(property)||"symbol"==typeof property)return delete target[property],!0;if(dataNode[NID].status===NODE_STATUSES.blocked)return console.error(`can't delete property '${property}'. object is blocked.`),!0;if(property in target){let oldValue=target[property],isOldValueProxy=!1;return void 0!==proxyNode[property]&&void 0!==proxyNode[property][ND].proxy&&(proxyNode[property][NID].status=PROXY_STATUSES.deleted,delete dataNode[property][ND].proxyNode,isOldValueProxy=!0,metadata.strict&&setTimeout(Proxserve.destroy,metadata.destroyDelay,proxyNode[property][ND].proxy)),delete target[property],initEmitEvent(dataNode,property,oldValue,isOldValueProxy,void 0,!1,metadata.trace),!0}return!0}});if(proxyNode[ND].proxy=revocable.proxy,proxyNode[ND].revoke=revocable.revoke,proxyTypes[typeoftarget]){let keys=Object.keys(target);for(let key of keys){if(key.startsWith("_$"))continue;let typeofproperty=realtypeof(target[key]);proxyTypes[typeofproperty]&&Proxserve.createProxy(metadata,dataNode,key)}}else console.warn(`Type of "${typeoftarget}" is not implemented`);return revocable.proxy}{const types=Object.keys(proxyTypes);throw new Error(`Must observe an ${types.join("/")}`)}}static destroy(proxy){var _a,_b;let proxyNode;try{proxyNode=proxy.$getProxserveNodes().proxyNode}catch(error){return}proxyNode[NID].status===PROXY_STATUSES.alive&&(proxyNode[NID].status=PROXY_STATUSES.deleted);let typeofproxy=realtypeof(proxy);if(proxyTypes[typeofproxy]){let keys=Object.keys(proxy);for(let key of keys)if(!key.startsWith("_$"))try{let typeofproperty=realtypeof(proxy[key]);proxyTypes[typeofproperty]&&Proxserve.destroy(proxyNode[key][ND].proxy)}catch(error){console.error(error)}null===(_b=(_a=proxyNode[ND]).revoke)||void 0===_b||_b.call(_a),proxyNode[NID].status=PROXY_STATUSES.revoked}else console.warn(`Type of "${typeofproxy}" is not implemented`)}static splitPath(path){return splitPath(path)}static evalPath(obj,path){return function(obj,path){if(""===path)return{object:obj,property:"",value:obj};let i,segments=splitPath(path);for(i=0;i<=segments.length-2;i++)if(void 0===(obj=obj[segments[i]]))throw new Error(`Invalid path was given - "${path}"`);return{object:obj,property:segments[i],value:obj[segments[i]]}}(obj,path)}}return exports.Proxserve=Proxserve,exports}({});
//# sourceMappingURL=proxserve.min.js.map